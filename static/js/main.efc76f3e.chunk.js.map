{"version":3,"sources":["DigitButton.js","OperationButton.js","App.js","index.js"],"names":["DigitButton","dispatch","digit","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","currentOperand","includes","previusOperand","Number","POSITIVE_INFINITY","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","INTERGET_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","split","integer","decimal","format","App","useReducer","keyPress","e","key","keyDigit","keyOperation","useEffect","window","addEventListener","removeEventListener","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efc76f3e.chunk.js","sourcesContent":["import { ACTIONS } from './App'\r\n\r\nexport default function DigitButton({ dispatch, digit }) {\r\n    return <button onClick={() => dispatch({ type: ACTIONS.ADD_DIGIT, payload: { digit } })}>{digit}</button>\r\n}\r\n","import { ACTIONS } from './App'\r\n\r\nexport default function OperationButton({ dispatch, operation }) {\r\n    return <button onClick={() => dispatch({ type: ACTIONS.CHOOSE_OPERATION, payload: { operation } })}>{operation}</button>\r\n}\r\n","import { useReducer, useEffect } from 'react'\nimport './styles.css'\nimport DigitButton from './DigitButton'\nimport OperationButton from './OperationButton'\n\nexport const ACTIONS = {\n    ADD_DIGIT: 'add-digit',\n    CHOOSE_OPERATION: 'choose-operation',\n    CLEAR: 'clear',\n    DELETE_DIGIT: 'delete-digit',\n    EVALUATE: 'evaluate',\n}\n\nfunction reducer(state, { type, payload }) {\n    switch (type) {\n        case ACTIONS.ADD_DIGIT:\n            if (state.overwrite) {\n                return {\n                    ...state,\n                    currentOperand: payload.digit,\n                    overwrite: false,\n                }\n            }\n            if (payload.digit == '0' && state.currentOperand == '0') return state\n            if (payload.digit == '.' && state.currentOperand?.includes('.')) {\n                return state\n            }\n\n            return {\n                ...state,\n                currentOperand: `${state.currentOperand || ''}${payload.digit}`,\n            }\n\n        case ACTIONS.CHOOSE_OPERATION:\n            if (state.currentOperand == null && state.previusOperand == null) {\n                return state\n            }\n            if (state.currentOperand == Number.POSITIVE_INFINITY) return state\n            if (state.currentOperand == null) {\n                return {\n                    ...state,\n                    operation: payload.operation,\n                }\n            }\n            if (state.previusOperand == null) {\n                return {\n                    ...state,\n                    operation: payload.operation,\n                    previusOperand: state.currentOperand,\n                    currentOperand: null,\n                }\n            }\n            return {\n                ...state,\n                previusOperand: evaluate(state),\n                operation: payload.operation,\n                currentOperand: null,\n            }\n\n        case ACTIONS.EVALUATE:\n            if (state.operation == null || state.currentOperand == null || state.previusOperand == null) {\n                return state\n            }\n\n            return {\n                ...state,\n                overwrite: true,\n                operation: null,\n                previusOperand: null,\n                currentOperand: evaluate(state),\n            }\n\n        case ACTIONS.DELETE_DIGIT:\n            if (state.overwrite) {\n                return {\n                    ...state,\n                    overwrite: false,\n                    currentOperand: null,\n                }\n            }\n            if (state.currentOperand == null) {\n                return state\n            }\n            if (state.currentOperand.length === 1) {\n                return {\n                    ...state,\n                    currentOperand: null,\n                }\n            }\n            return {\n                ...state,\n                currentOperand: state.currentOperand.slice(0, -1),\n            }\n\n        case ACTIONS.CLEAR:\n            return {}\n    }\n}\n\nfunction evaluate({ currentOperand, previusOperand, operation }) {\n    const prev = parseFloat(previusOperand)\n    const current = parseFloat(currentOperand)\n\n    if (isNaN(prev) || isNaN(current)) return ''\n\n    let computation = ''\n\n    switch (operation) {\n        case '+':\n            computation = prev + current\n            break\n        case '-':\n            computation = prev - current\n            break\n        case '*':\n            computation = prev * current\n            break\n        case 'รท':\n            computation = prev / current\n            break\n    }\n\n    return computation.toString()\n}\n\nconst INTERGET_FORMATTER = new Intl.NumberFormat('en-us', {\n    maximumFractionDigits: 0,\n})\n\nfunction formatOperand(operand) {\n    if (operand == null) return\n    const [integer, decimal] = operand.split('.')\n    if (decimal == null) return INTERGET_FORMATTER.format(integer)\n    return `${INTERGET_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction App() {\n    const [{ currentOperand, previusOperand, operation }, dispatch] = useReducer(reducer, {})\n\n    function keyPress(e) {\n        if (!isNaN(e.key) || e.key == '.') {\n            let keyDigit = e.key\n            return dispatch({ type: ACTIONS.ADD_DIGIT, payload: { digit: keyDigit } })\n        }\n        if (e.key == '+' || e.key == '-' || e.key == '*' || e.key == '/') {\n            let keyOperation = e.key\n            return dispatch({ type: ACTIONS.CHOOSE_OPERATION, payload: { operation: keyOperation } })\n        }\n        if (e.key == 'Enter') {\n            return dispatch({ type: ACTIONS.EVALUATE })\n        }\n        if (e.key == 'Backspace') {\n            return dispatch({ type: ACTIONS.DELETE_DIGIT })\n        }\n        if (e.key == 'Delete' || e.key == 'Escape') {\n            return dispatch({ type: ACTIONS.CLEAR })\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('keydown', keyPress)\n\n        return () => {\n            window.removeEventListener('keydown', keyPress)\n        }\n    }, [])\n\n    return (\n        <div className='calculator-grid'>\n            <div className='output'>\n                <div className='previus-operand'>\n                    {formatOperand(previusOperand)} {operation}\n                </div>\n                <div className='current-operand'>{formatOperand(currentOperand)}</div>\n            </div>\n            <button className='span-two' onClick={() => dispatch({ type: ACTIONS.CLEAR })}>\n                AC\n            </button>\n            <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>DEL</button>\n            <OperationButton operation='รท' dispatch={dispatch} />\n            <DigitButton digit='1' dispatch={dispatch} />\n            <DigitButton digit='2' dispatch={dispatch} />\n            <DigitButton digit='3' dispatch={dispatch} />\n            <OperationButton operation='*' dispatch={dispatch} />\n            <DigitButton digit='4' dispatch={dispatch} />\n            <DigitButton digit='5' dispatch={dispatch} />\n            <DigitButton digit='6' dispatch={dispatch} />\n            <OperationButton operation='+' dispatch={dispatch} />\n            <DigitButton digit='7' dispatch={dispatch} />\n            <DigitButton digit='8' dispatch={dispatch} />\n            <DigitButton digit='9' dispatch={dispatch} />\n            <OperationButton operation='-' dispatch={dispatch} />\n            <DigitButton digit='.' dispatch={dispatch} />\n            <DigitButton digit='0' dispatch={dispatch} />\n            <button onClick={() => dispatch({ type: ACTIONS.EVALUATE })} className='span-two'>\n                =\n            </button>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}